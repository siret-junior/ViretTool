<UserControl x:Class="ViretTool.PresentationLayer.Controls.Common.FrameControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ViretTool.PresentationLayer.Controls.Common"
             xmlns:properties="clr-namespace:ViretTool.Resources.Properties;assembly=ViretTool.Resources"
             xmlns:converters="clr-namespace:ViretTool.PresentationLayer.Converters"
             mc:Ignorable="d"
             xmlns:debug="debug-mode"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             d:DesignHeight="108" d:DesignWidth="192"
             d:DataContext="{d:DesignInstance local:FrameViewModel}">

    <UserControl.Resources>
        <ResourceDictionary>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <converters:BooleanToVisibilityHiddenConverter x:Key="BooleanToVisibilityHiddenConverter" />
            <converters:BooleanAndToVisibilityConverter x:Key="BooleanAndToVisibilityConverter" />
            <converters:InvertedBooleanConverter x:Key="InvertedBooleanConverter" />
            <Grid x:Key="CommonControls" x:Shared="False" ToolTipService.ShowDuration="{x:Static Member=sys:Int32.MaxValue}" ToolTipService.Placement="Top">
                <Grid.ToolTip >
                    <TextBlock Name="ToolTipLabel" FontSize="20" Text="{Binding ToolTipLabel, IsAsync=True}" />
                </Grid.ToolTip>

                <!-- Thumbnail -->
                <Image Name="Image" Stretch="Fill" >
                    <Image.Style>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Source" Value="{Binding ImageSource, Mode=OneWay, IsAsync=False}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsClicked, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:FrameControl}}, Mode=OneWay, IsAsync=True}" Value="True">
                                    <Setter Property="Source" Value="{Binding ImageSource, Mode=OneWay}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
                
                <!-- Selection rectangles -->
                <Rectangle Fill="Transparent" Stroke="Lime" StrokeThickness="4"
                           Visibility="{Binding IsSelectedForQuery, Converter={StaticResource BooleanToVisibilityConverter}, IsAsync=True, FallbackValue=Collapsed}"/>
                <Rectangle Fill="Transparent" Stroke="Lime" StrokeThickness="4" StrokeDashArray="4 4"
                           Visibility="{Binding IsSelectedForDetail, Converter={StaticResource BooleanToVisibilityConverter}, IsAsync=True, FallbackValue=Collapsed}"/>

                <!-- Borders -->
                <!--<Border BorderThickness="0,0,0,4" Visibility="{Binding IsBottomBorderVisible, Converter={StaticResource BooleanToVisibilityHiddenConverter}, Mode=OneWay, IsAsync=True}">
                    <Border.BorderBrush>
                        <SolidColorBrush Color="{Binding BottomBorderColor}"/>
                    </Border.BorderBrush>
                </Border>
                <Border BorderThickness="0,0,4,0" Visibility="{Binding IsRightBorderVisible, Converter={StaticResource BooleanToVisibilityHiddenConverter}, Mode=OneWay, IsAsync=True}">
                    <Border.BorderBrush>
                        <SolidColorBrush Color="{Binding RightBorderColor}" />
                    </Border.BorderBrush>
                </Border>-->

                <!-- Labels -->
                <TextBlock Name="TopLeftLabel" FontSize="8" Padding="1" HorizontalAlignment="Left" VerticalAlignment="Top" Background="LightSkyBlue" Text="{Binding VideoId, IsAsync=True}" />

                <TextBlock Name="TopRightLabel" FontSize="8" Padding="1" Margin="0,0,3,0" Foreground="White" HorizontalAlignment="Right" VerticalAlignment="Top">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="Text" Value="{Binding TopRightLabel, Mode=OneWay, IsAsync=True}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsClicked, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:FrameControl}}, Mode=OneWay, IsAsync=True}" Value="True">
                                    <Setter Property="Text" Value="{Binding TopRightLabel, Mode=OneWay}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <!--<Label Name="groupLabel" FontSize="8" Padding="1" Background="LightSkyBlue" HorizontalAlignment="Left" Visibility="Hidden" VerticalAlignment="Center" />
                <Label Name="frameLabel" FontSize="8" Padding="1" Background="LightSkyBlue" HorizontalAlignment="Right" Visibility="Hidden" VerticalAlignment="Top" />-->
                
                
                <!-- Buttons -->
                <Grid Name="DisplayButtons" Height="16" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Opacity="0.6"
                      Visibility="{Binding Path=IsMouseOverFrame, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:FrameControl}}, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay, IsAsync=True}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="1*" />
                            <ColumnDefinition Width="1*" />
                        </Grid.ColumnDefinitions>
                        <StackPanel Grid.Column="0" Orientation="Horizontal">
                            <StackPanel.Visibility>
                                <MultiBinding Converter="{StaticResource BooleanAndToVisibilityConverter}">
                                    <Binding RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type local:FrameControl}}" Path="IsSelectable" IsAsync="True" />
                                    <Binding Path="CanAddToQuery" />
                                </MultiBinding>
                            </StackPanel.Visibility>
                            <Button FontSize="7" Background="LightCoral" Click="SimilarClicked" Tag="1">
                                <TextBlock VerticalAlignment="Center" FontWeight="Bold" Margin="0,0,0,0" Padding ="5">
                                    <Run Text="Similar" FontSize="12"/>
                                </TextBlock>
                            </Button>
                        </StackPanel>

                        <Button x:Name="VideoButton" Grid.Column="6" FontSize="7" Background="DeepSkyBlue" Click="VideoClicked"
                                Visibility="{Binding Path=IsSelectable, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:FrameControl}}, Converter={StaticResource BooleanToVisibilityConverter}, IsAsync=True}">
                            <TextBlock FontSize="8" VerticalAlignment="Top" Margin="0, 0, 0, 0" FontWeight="Bold" Text="{x:Static properties:Resources.VideoButtonText}"/>
                        </Button>
                        <Button x:Name="SubmitButton" Grid.Column="7" FontSize="7" Background="DarkSeaGreen" Click="SubmitClicked">
                            <Button.Visibility>
                                <MultiBinding Converter="{StaticResource BooleanAndToVisibilityConverter}">
                                    <Binding Path="IsSelectable" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type local:FrameControl}}" IsAsync="True" />
                                    <Binding Path="CanSubmit" />
                                </MultiBinding>
                            </Button.Visibility>
                            <TextBlock FontSize="8" VerticalAlignment="Top" Margin="0, 0, 0, 0" FontWeight="Bold" Text="{x:Static properties:Resources.SubmitButtonTextShort}"/>
                        </Button>
                    </Grid>
                </Grid>

                <Grid Name="ScrollHelper" HorizontalAlignment="Stretch" VerticalAlignment="Center" Opacity="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*" />
                        <ColumnDefinition Width="4*" />
                        <ColumnDefinition Width="1*" />
                    </Grid.ColumnDefinitions>

                    <TextBlock Name="LeftScrollHelper" Grid.Column="0" Foreground="Azure" Text="&lt;" Margin="0,0,1,60"
                               Visibility="{Binding Path=IsScrollingLeft, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:FrameControl}}, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay, IsAsync=True}">
                        <TextBlock.RenderTransform>
                            <ScaleTransform ScaleX="1" ScaleY="4" />
                        </TextBlock.RenderTransform>
                    </TextBlock>
                    <TextBlock Name="RightScrollHelper" Grid.Column="2" Foreground="Azure" TextAlignment="Right" Text="&gt;" Margin="0,0,1,60"
                               Visibility="{Binding Path=IsScrollingRight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:FrameControl}}, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay, IsAsync=True}">
                        <TextBlock.RenderTransform>
                            <ScaleTransform ScaleX="1" ScaleY="4" />
                        </TextBlock.RenderTransform>
                    </TextBlock>

                </Grid>
            </Grid>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid Background="White" MouseDown="FrameControl_OnMouseDown" MouseWheel="FrameControl_OnMouseWheel" MouseMove="FrameControl_OnMouseMove" MouseLeave="FrameControl_OnMouseLeave"
          Visibility="{Binding IsVisible, Converter={StaticResource BooleanToVisibilityHiddenConverter}, Mode=OneWay, IsAsync=True}">
        <ContentControl x:Name="MainTile" Content="{StaticResource CommonControls}" Focusable="False" />
        <Popup IsOpen="{Binding Path=IsClicked, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:FrameControl}}, Mode=OneWay, IsAsync=True}" 
               Placement="Center" MouseLeave="Popup_OnMouseLeave"
               Width="{Binding ActualWidth, ElementName=MainTile, Mode=OneWay, IsAsync=True}" Height="{Binding ActualHeight, ElementName=MainTile, Mode=OneWay, IsAsync=True}">
            <Popup.LayoutTransform>
                <ScaleTransform ScaleX="2" ScaleY="2" />
            </Popup.LayoutTransform>
            <Grid>
                <ContentControl Content="{StaticResource CommonControls}" />
            </Grid>
        </Popup>

    </Grid>
</UserControl>
