<Window x:Class="ViretTool.PresentationLayer.Windows.Views.MainWindowView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:cal="http://www.caliburnproject.org"
			 xmlns:properties="clr-namespace:ViretTool.Resources.Properties;assembly=ViretTool.Resources"
             xmlns:converters="clr-namespace:ViretTool.PresentationLayer.Converters"
			 xmlns:common="clr-namespace:ViretTool.PresentationLayer.Controls.Common"
			 xmlns:viewModels="clr-namespace:ViretTool.PresentationLayer.Windows.ViewModels"
			 mc:Ignorable="d" 
             d:DesignHeight="1080" d:DesignWidth="1920"
             d:DataContext="{d:DesignInstance viewModels:MainWindowViewModel}"
			 Title="{x:Static properties:Resources.AppTitle}"
             WindowStyle="None" ResizeMode="NoResize" AllowDrop="True"
             cal:Message.Attach="[Event KeyUp] = [Action OnKeyUp($eventArgs)]; [Event Drop] = [Action OnDrop($eventArgs)]; [Event Closing] = [Action OnClose($eventArgs)]"
             WindowStartupLocation="CenterScreen" WindowState="Maximized">
    <Window.Resources>
        <ResourceDictionary>
            <converters:InvertedBooleanConverter x:Key="InvertedBooleanConverter" />
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <converters:BooleanOrToBooleanConverter x:Key="BooleanOrToBooleanConverter" />
            <Style TargetType="CheckBox" x:Key="PrimaryCheckBoxStyle">
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="ContentTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <TextBlock Margin="3" Text="{x:Static properties:Resources.PrimaryQueryLabel}">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type CheckBox}}}" Value="True">
                                                <Setter Property="FontSize" Value="20" />
                                                <Setter Property="FontWeight" Value="Bold" />
                                                <Setter Property="Foreground" Value="Red" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Window.Resources>


    <Grid x:Name="MainContainerGrid"> <!-- TODO: why is this encapulated in a grid? Does it need to be? -->
        <common:BusyIndicator>
            <common:BusyIndicator.IsBusy>
                <MultiBinding Converter="{StaticResource BooleanOrToBooleanConverter}">
                    <Binding Path="IsBusy" />
                    <!--<Binding Path="QueryResults.IsBusy" />-->
                </MultiBinding>
            </common:BusyIndicator.IsBusy>
            
            <Grid x:Name="MainLayoutGrid">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" MinHeight="32"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!-- top panel -->
                <Grid Grid.Row="0" FocusVisualStyle="{x:Null}" Focusable="False">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <!-- Menu -->
                    <Menu Grid.Column="0" Width="Auto" Background="White" Focusable="False">
                        <!-- File -->
                        <MenuItem Height="32" Padding="15 3 15 3" Header="{x:Static properties:Resources.FileHeader}" FocusVisualStyle="{x:Null}" Focusable="False">
                            <MenuItem Header="{x:Static properties:Resources.OpenDatabaseHeader}" cal:Message.Attach="[Event Click] = [Action OpenDatabase]"/>
                            <Separator />
                            <!--<MenuItem Header="{x:Static properties:Resources.FetchTaskList}" cal:Message.Attach="[Event Click] = [Action FetchTaskList]"/>-->
                            <MenuItem Header="{x:Static properties:Resources.Exit}" cal:Message.Attach="[Event Click] = [Action Exit]"/>
                        </MenuItem>
                        <!-- Test -->
                        <MenuItem Height="32" Padding="15 3 15 3" Header="{x:Static properties:Resources.TestButtonText}" 
                                          cal:Message.Attach="[Event Click] = [Action OpenTestWindow]"
                                          FocusVisualStyle="{x:Null}" Focusable="False"></MenuItem>
                    </Menu>

                    <!-- Clear button -->
                    <Button Grid.Column="1" x:Name="ClearAll"  
                                    Height="32" VerticalAlignment="Top"
                                    Margin="0,0,0,0" Padding="5 3 5 3"
                                    Content="{x:Static properties:Resources.ClearAllText}"
                                    Background="IndianRed" />
                    
                    <!-- Textbox input -->
                    <ContentControl Grid.Column="2" x:Name="Query" />

                    <!-- Model selector -->
                    <StackPanel Grid.Column="3" Margin="5">
                        <RadioButton IsChecked="{Binding IsW2vvChecked}">W2VV</RadioButton>
                        <RadioButton IsChecked="{Binding IsBertChecked}">BERT</RadioButton>
                        <RadioButton IsChecked="{Binding IsClipChecked}">CLIP</RadioButton>
                    </StackPanel>
                    
                    <!-- Model remote status? -->

                    <!-- Submission result -->
                    <StackPanel Grid.Column="4" Margin="5" MinWidth="100" Orientation="Vertical">
                        <TextBlock Text="Last submission:" />
                        <TextBlock Text="{Binding LastSubmissionResultLabel}" />
                    </StackPanel>

                    <!-- Submission result counter -->
                    <StackPanel Grid.Column="5" Margin="0" MinWidth="100" Orientation="Vertical" TextBlock.FontSize="10">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Correct: " />
                            <TextBlock Text="{Binding CorrectSubmissionsCount}" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Wrong: " />
                            <TextBlock Text="{Binding WrongSubmissionsCount}" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Indeterminate: " />
                            <TextBlock Text="{Binding IndeterminateSubmissionsCount}" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Empty: " />
                            <TextBlock Text="{Binding EmptySubmissionsCount}" />
                        </StackPanel>
                    </StackPanel>

                    <!-- Submission total counter -->
                    <StackPanel Grid.Column="6" Margin="0" MinWidth="100" Orientation="Vertical" TextBlock.FontSize="10">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Sent: " />
                            <TextBlock Text="{Binding SentSubmissionsCount}" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Received: " />
                            <TextBlock Text="{Binding ReceivedSubmissionsCount}" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Waiting: " />
                            <TextBlock Text="{Binding WaitingSubmissionsCount}" />
                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="Lost: " />
                            <TextBlock Text="{Binding LostSubmissionsCount}" />
                        </StackPanel>
                    </StackPanel>


                </Grid>

                <!-- GridSplitter -->
                <GridSplitter Grid.Row="1" Height="5" HorizontalAlignment="Stretch" Focusable="False" />

                <!-- Displays -->
                <ContentControl Grid.Row="2" x:Name="ResultDisplay" />

            </Grid>
        </common:BusyIndicator>

        <!-- Video detail window -->
        <Popup IsOpen="{Binding IsDetailViewVisible}" Placement="Center">
            <ContentControl cal:View.Model="{Binding DetailViewModel}"/>
        </Popup>
        
    </Grid>
</Window>

